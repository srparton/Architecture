
while.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	ba 01 00 00 00       	mov    $0x1,%edx #int i = 1
   5:	b8 01 00 00 00       	mov    $0x1,%eax #int j = 1 loading 1 into regesters for both
   a:	eb 06                	jmp    12 <main+0x12> #jump unconditonally to compareson of i <= 10
   c:	0f af d0             	imul   %eax,%edx #x = x*i multiply eax and edx and store in eax
   f:	83 c0 01             	add    $0x1,%eax #i++
  12:	83 f8 0a             	cmp    $0xa,%eax #i<=10 (0xa)
  15:	7e f5                	jle    c <main+0xc> jump if less than to line c (x*i and i++)
  17:	48 83 ec 08          	sub    $0x8,%rsp #preparing for printf call 
  1b:	be 00 00 00 00       	mov    $0x0,%esi #^^^
  20:	bf 01 00 00 00       	mov    $0x1,%edi #^^^
  25:	b8 00 00 00 00       	mov    $0x0,%eax #^^^ 
  2a:	e8 00 00 00 00       	callq  2f <main+0x2f> #call printf 
  2f:	b8 00 00 00 00       	mov    $0x0,%eax #load eax into 0 memory location 
  34:	48 83 c4 08          	add    $0x8,%rsp #load rsp into memory location 8
  38:	c3                   	retq    #return
